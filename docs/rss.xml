<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>OMElon007的博客</title><link>https://OMElon007.github.io</link><description>CSDN卡审核什么的都去死吧</description><copyright>OMElon007的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/186453953?v=4</url><title>avatar</title><link>https://OMElon007.github.io</link></image><lastBuildDate>Sat, 09 Nov 2024 16:38:22 +0000</lastBuildDate><managingEditor>OMElon007的博客</managingEditor><ttl>60</ttl><webMaster>OMElon007的博客</webMaster><item><title>VBA 1</title><link>https://OMElon007.github.io/post/VBA%201.html</link><description>' ****************************************创建/打开文件夹****************************************&#13;
Private Sub Worksheet_SelectionChange(ByVal Target As Range)&#13;
    ' 创建String变量存储文件夹地址&#13;
    Dim folderPath As String&#13;
    ' 创建String变量存储打开文件夹地址&#13;
    Dim fullPath As String&#13;
&#13;
    ' 确保只在点击 H 列单元格时执行&#13;
    If Not Intersect(Target, Me.Columns('H')) Is Nothing And Target.Cells.count = 1 Then&#13;
        ' 获取文件夹路径&#13;
        folderPath = Me.Range('H1').Value&#13;
        ' 构建完整路径，使用对应行的 B 列和 D 列的值&#13;
        fullPath = folderPath &amp; Me.Cells(Target.Row, 2).Value &amp; ' ' &amp; Me.Cells(Target.Row, 4).Value&#13;
        &#13;
        ' 若无法打开文件夹则跳到CreateFolder标签&#13;
        On Error GoTo CreateFolder&#13;
        ' 尝试打开文件夹&#13;
        ' ActiveWorkbook指当前活动工作簿&#13;
        ActiveWorkbook.FollowHyperlink Address:=fullPath, NewWindow:=True&#13;
        ' 如果成功打开文件夹，则退出子程序，后续代码不再执行&#13;
        Exit Sub&#13;
&#13;
CreateFolder:&#13;
        ' 如果出错则继续执行，而不是中断&#13;
        On Error Resume Next&#13;
        ' 创建文件夹，已有则会出错&#13;
        MkDir fullPath&#13;
        '用资源管理器打开新建文件夹&#13;
        Shell 'explorer.exe ' &amp; fullPath, vbNormalFocus&#13;
    End If&#13;
End Sub&#13;
' ****************************************点击链接打开并复制****************************************&#13;
Private Sub Worksheet_FollowHyperlink(ByVal Target As Hyperlink)&#13;
    ' 检查是否是 E 列&#13;
    If Target.Range.Column = 5 Then&#13;
        ' 获取显示的文字&#13;
        Dim linkText As String&#13;
        ' Hyperlink.TextToDisplay为超链接中显示的文字&#13;
        linkText = Target.TextToDisplay&#13;
&#13;
        ' 复制显示的文字到剪贴板&#13;
        ' 此处调用模块中的SetClipboardText过程&#13;
        SetClipboardText linkText&#13;
    End If&#13;
End Sub&#13;
' ****************************************分类高亮****************************************&#13;
' 更新并重新计算C列公式&#13;
Sub UpdateAndRecalculateColumnC()&#13;
    Dim lastRow As Long&#13;
    Dim i As Long&#13;
    &#13;
    ' 找到B列中的最后一行&#13;
    ' Rows.count为当前活动工作表的最大行数，1048576&#13;
    ' Cells(Rows.count, 'B')为定位到B列的最后一个格子，即单元格B1048576&#13;
    ' End(xlUp):沿着B列最后一个格子，向上寻找第一次出现的非空单元格&#13;
    ' .Row取行号&#13;
    lastRow = Cells(Rows.count, 'B').End(xlUp).Row&#13;
    &#13;
    ' 从第 2 行开始循环，更新每行 C 列的公式&#13;
    For i = 2 To lastRow&#13;
        If Cells(i, 'A').Value &lt;&gt; '' And Cells(i, 'B').Value &lt;&gt; '' Then&#13;
            ' 动态设置每行的C列公式&#13;
            Cells(i, 'C').Formula = '=IF(B' &amp; i - 1 &amp; '=B' &amp; i &amp; ',C' &amp; i - 1 &amp; ',C' &amp; i - 1 &amp; '+1)'&#13;
        End If&#13;
    Next i&#13;
    &#13;
    ' 重新计算C列&#13;
    Range('C:C').Calculate&#13;
End Sub&#13;
' 当A列或B列发生变化时自动触发UpdateAndRecalculateColumnC更新并重新计算C、H列公式&#13;
Private Sub Worksheet_Change(ByVal Target As Range)&#13;
    ' 检查是否在A列或B列中更改了单元格&#13;
    If Not Intersect(Target, Me.Columns('A')) Is Nothing Or Not Intersect(Target, Me.Columns('B')) Is Nothing Then&#13;
        Dim rowNum As Long&#13;
        rowNum = Target.Row&#13;
        &#13;
        ' 确保当前行A列和B列都有值，且不是第一行&#13;
        If rowNum &gt; 1 And Cells(rowNum, 'A').Value &lt;&gt; '' And Cells(rowNum, 'B').Value &lt;&gt; '' Then&#13;
            ' 设置H列的公式&#13;
            Cells(rowNum, 'H').Formula = '=HYPERLINK($H$1&amp;B' &amp; rowNum &amp; '&amp;'' ''&amp;D' &amp; rowNum &amp; ', $D$1)'&#13;
            Cells(rowNum, 'H').Font.Color = Cells(rowNum - 1, 'H').Font.Color&#13;
            Cells(rowNum, 'H').Font.Underline = xlUnderlineStyleNone ' 移除下划线&#13;
            &#13;
            ' 调用UpdateAndRecalculateColumnC，更新C列公式并重新计算&#13;
            UpdateAndRecalculateColumnC&#13;
        End If&#13;
    End If&#13;
End Sub。</description><guid isPermaLink="true">https://OMElon007.github.io/post/VBA%201.html</guid><pubDate>Fri, 08 Nov 2024 13:45:34 +0000</pubDate></item><item><title>Java+Selenium+edge自动化测试环境搭建</title><link>https://OMElon007.github.io/post/Java%2BSelenium%2Bedge-zi-dong-hua-ce-shi-huan-jing-da-jian.html</link><description>## 参考：&#13;
[Java+Selenium+edge自动化测试环境搭建](https://www.cnblogs.com/rose24/p/18150701/java-selenium-edge-automatic-testing-environment-construction-1x34im)&#13;
64位的用x64版本&#13;
## Edge拓展下载：&#13;
[Microsoft Edge 加载项 - Selenium](https://microsoftedge.microsoft.com/addons/search/Selenium)&#13;
### Tips：&#13;
[IDEA手动添加Libraries](https://blog.csdn.net/weixin_44316527/article/details/122432058)。</description><guid isPermaLink="true">https://OMElon007.github.io/post/Java%2BSelenium%2Bedge-zi-dong-hua-ce-shi-huan-jing-da-jian.html</guid><pubDate>Sun, 27 Oct 2024 07:03:12 +0000</pubDate></item></channel></rss>